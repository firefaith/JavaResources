目标：
   数据类型
   变量
   运算符
   逻辑控制语句
   
1、基本概念
   数据类型确定要存储在内存中的数据的类型
   变量是存储数据的基本单元 。
   运算符是一个符号，用于操作一个或多个参数以得出结果
   程序是按顺序执行的。控制流语句允许改变此顺序。   
   
2、数据类型
   Java 是一种强类型的语言。在 Java 程序中，当 JVM 编译一个数据的时候，必须知道
   这个数据长度。然后才能在内存中正确的给该数据分配内存。
   
   Java 有两大数据类型，分别是：原始数据类型、引用数据类型。
   原始数据类型                引用数据类型
   byte  8位                   数组
   char  32                    类
   short 16                    接口
   int   32
   long  64
   float 32 
   double 64
   boolean
   
   int a 
   int b 
   a + b =c;
   Java 在设计的时候，采用全新的设计思想--面向对象的设计思想，Java 中
一切都是对象。(例外:8种原始数据类型不是对象，因为在 Java 之前人们使用
原始数据类型进行数学运算非常方便。在 Java 中沿用了之前的数据类型。)

  数组:
    int[]  aa = {11,33,23,13};
	(1)存储相同类型的数据
	(2)数组有长度
	(3)采用下标索引访问数组中的数据
  在 Java 中，数组类型是对象。	
  
  是否是对象的区别：对象可以有属性和方法。  对象.方法()
  aa.length    得到数组的长度。
  
  int a = 7;
  a.length
	
3、变量
   存储变化值的字符串。
    PI = 3.1415926.... \\常量
   特点：
   (1)变量必须指定类型
   (2)变量要指定初始值   int  ss=77;
   (3)变量要指定有效范围 
       {
		  //Java 代码块，一个块代表一个 Java 代码的有效范围
		  //在该代码块中定义的 num 变量，只能在该{}中有效
		  int num = 20;
		  
	   }
	   
4、运算符
   见代码
   
5、流程控制语句
   判断语句
      if-else 语句
      switch-case 语句
   循环语句
      while 循环
      do-while 循环
      for 循环
   
 
switch-case 语句的语法为：char int short byte 枚举
     switch (表达式) {
        case 1:
            操作 1 的语句;
            break;
        case 2:
            操作 2 的语句;
            break;
            ….
         case n :
            操作 n 的语句;
            break;

        default:
            默认语句; 
    }
 
   
   
   
   
   两种跳转语句为：
break
continue

    break 语句：用于终止块。
    continue 语句：有时程序员可能希望继续循环，而停止处理其主体内的其余代码，以进行特定的迭代。continue 语句可用于这种操作。

   
   
   








   

   
	
   
   
   
   
   
   
   
   
   
   
   
   
   
	
	












   
   
   
   











   
   
   
  